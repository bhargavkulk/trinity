Terminals unused in grammar

    TOKEN_DIR_GRID
    TOKEN_DIR_TITLE
    TOKEN_DIR_ICON
    TOKEN_ERR


Rules useless in parser due to conflicts

   45 @6: %empty


State 116 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: vardefs fundefs

    2 vardefs: variable vardefs
    3        | %empty

    4 fundefs: fundef fundefs
    5        | %empty

    6 $@1: %empty

    7 fundef: function $@1 blckstmt

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    9         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R
   11         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

   13 params: params_
   14       | %empty

   15 params_: param
   16        | param TOKEN_COMMA params_

   17 param: TOKEN_IDENTIFIER TOKEN_COLON type
   18      | TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

   19 type: TOKEN_INT
   20     | TOKEN_STR
   21     | TOKEN_BLK

   22 stmts: stmts stmt
   23      | %empty

   24 stmt: variable
   25     | expr TOKEN_SEMICOLON
   26     | forstmt
   27     | ifstmt
   28     | whilestmt
   29     | retstmt
   30     | asgnstmt
   31     | blckstmt
   32     | TOKEN_BRK TOKEN_SEMICOLON
   33     | TOKEN_CNT TOKEN_SEMICOLON
   34     | TOKEN_SEMICOLON
   35     | TOKEN_LOG expr TOKEN_SEMICOLON

   36 retstmt: TOKEN_RET TOKEN_SEMICOLON
   37        | TOKEN_RET expr TOKEN_SEMICOLON

   38 @2: %empty

   39 @3: %empty

   40 whilestmt: TOKEN_WHILE @2 expr @3 blckstmt

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt

   42 @4: %empty

   43 @5: %empty

   44 ifstmt: TOKEN_IF expr @4 blckstmt @5 TOKEN_ELSE blckstmt

   45 @6: %empty

   46 ifstmt: TOKEN_IF expr @6 blckstmt

   47 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr TOKEN_SEMICOLON
   48         | TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON

   49 $@7: %empty

   50 blckstmt: TOKEN_BRACE_L $@7 stmts TOKEN_BRACE_R

   51 expr: expr TOKEN_LOGICAL_OR andexpr
   52     | andexpr

   53 andexpr: andexpr TOKEN_LOGICAL_AND notexpr
   54        | notexpr

   55 notexpr: TOKEN_LOGICAL_NOT relexpr
   56        | relexpr

   57 relexpr: relexpr TOKEN_LESS_EQ sumexpr
   58        | relexpr TOKEN_GREATER_EQ sumexpr
   59        | relexpr TOKEN_LESS sumexpr
   60        | relexpr TOKEN_GREATER sumexpr
   61        | relexpr TOKEN_DOUBLE_EQ sumexpr
   62        | relexpr TOKEN_NOT_EQ sumexpr
   63        | sumexpr

   64 sumexpr: sumexpr TOKEN_PLUS mulexpr
   65        | sumexpr TOKEN_MINUS mulexpr
   66        | mulexpr

   67 mulexpr: mulexpr TOKEN_STAR unexpr
   68        | mulexpr TOKEN_SLASH unexpr
   69        | mulexpr TOKEN_MODULO unexpr
   70        | unexpr

   71 unexpr: TOKEN_MINUS smolexpr
   72       | smolexpr

   73 smolexpr: TOKEN_INT_VAL
   74         | TOKEN_NIL
   75         | TOKEN_STR_VAL
   76         | TOKEN_PAREN_L expr TOKEN_PAREN_R
   77         | TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   78         | callexpr
   79         | TOKEN_IDENTIFIER

   80 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args TOKEN_PAREN_R

   81 args: args_
   82     | %empty

   83 args_: args_ TOKEN_COMMA expr
   84      | expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_INT (258) 19
    TOKEN_STR (259) 20
    TOKEN_BLK (260) 21
    TOKEN_FUN (261) 10 11 12
    TOKEN_IF (262) 44 46
    TOKEN_ELSE (263) 44
    TOKEN_FOR (264) 41
    TOKEN_FROM (265) 41
    TOKEN_TO (266) 41
    TOKEN_WHILE (267) 40
    TOKEN_VAR (268) 8 9
    TOKEN_BRK (269) 32
    TOKEN_CNT (270) 33
    TOKEN_RET (271) 36 37
    TOKEN_NIL (272) 74
    TOKEN_DIR_GRID (273)
    TOKEN_DIR_TITLE (274)
    TOKEN_DIR_ICON (275)
    TOKEN_SQ_BRACK_L (276) 9 12 18 48 77
    TOKEN_SQ_BRACK_R (277) 9 12 18 48 77
    TOKEN_PAREN_L (278) 10 11 12 76 80
    TOKEN_PAREN_R (279) 10 11 12 76 80
    TOKEN_BRACE_L (280) 50
    TOKEN_BRACE_R (281) 50
    TOKEN_PLUS (282) 64
    TOKEN_MINUS (283) 65 71
    TOKEN_SLASH (284) 68
    TOKEN_STAR (285) 67
    TOKEN_MODULO (286) 69
    TOKEN_DOUBLE_EQ (287) 61
    TOKEN_NOT_EQ (288) 62
    TOKEN_GREATER_EQ (289) 58
    TOKEN_LESS_EQ (290) 57
    TOKEN_EQUAL (291) 8 9 47 48
    TOKEN_LESS (292) 59
    TOKEN_GREATER (293) 60
    TOKEN_LOGICAL_AND (294) 53
    TOKEN_LOGICAL_OR (295) 51
    TOKEN_LOGICAL_NOT (296) 55
    TOKEN_SEMICOLON (297) 8 9 25 32 33 34 35 36 37 47 48
    TOKEN_COLON (298) 8 9 11 12 17 18
    TOKEN_COMMA (299) 16 83
    TOKEN_INT_VAL (300) 73
    TOKEN_STR_VAL (301) 75
    TOKEN_IDENTIFIER (302) 8 9 10 11 12 17 18 41 47 48 77 79 80
    TOKEN_LOG (303) 35
    TOKEN_ERR (304)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    vardefs (52)
        on left: 2 3
        on right: 1 2
    fundefs (53)
        on left: 4 5
        on right: 1 4
    fundef (54)
        on left: 7
        on right: 4
    $@1 (55)
        on left: 6
        on right: 7
    variable (56)
        on left: 8 9
        on right: 2 24
    function (57)
        on left: 10 11 12
        on right: 7
    params (58)
        on left: 13 14
        on right: 10 11 12
    params_ (59)
        on left: 15 16
        on right: 13 16
    param (60)
        on left: 17 18
        on right: 15 16
    type (61)
        on left: 19 20 21
        on right: 8 9 11 12 17 18
    stmts (62)
        on left: 22 23
        on right: 22 50
    stmt (63)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 22
    retstmt (64)
        on left: 36 37
        on right: 29
    whilestmt (65)
        on left: 40
        on right: 28
    @2 (66)
        on left: 38
        on right: 40
    @3 (67)
        on left: 39
        on right: 40
    forstmt (68)
        on left: 41
        on right: 26
    ifstmt (69)
        on left: 44 46
        on right: 27
    @4 (70)
        on left: 42
        on right: 44
    @5 (71)
        on left: 43
        on right: 44
    @6 (72)
        on left: 45
        on right: 46
    asgnstmt (73)
        on left: 47 48
        on right: 30
    blckstmt (74)
        on left: 50
        on right: 7 31 40 41 44 46
    $@7 (75)
        on left: 49
        on right: 50
    expr (76)
        on left: 51 52
        on right: 8 25 35 37 40 41 44 46 47 48 51 76 77 83 84
    andexpr (77)
        on left: 53 54
        on right: 51 52 53
    notexpr (78)
        on left: 55 56
        on right: 53 54
    relexpr (79)
        on left: 57 58 59 60 61 62 63
        on right: 55 56 57 58 59 60 61 62
    sumexpr (80)
        on left: 64 65 66
        on right: 57 58 59 60 61 62 63 64 65
    mulexpr (81)
        on left: 67 68 69 70
        on right: 64 65 66 67 68 69
    unexpr (82)
        on left: 71 72
        on right: 67 68 69 70
    smolexpr (83)
        on left: 73 74 75 76 77 78 79
        on right: 71 72
    callexpr (84)
        on left: 80
        on right: 78
    args (85)
        on left: 81 82
        on right: 9 80
    args_ (86)
        on left: 83 84
        on right: 81 83


State 0

    0 $accept: . program $end

    TOKEN_VAR  shift, and go to state 1

    $default  reduce using rule 3 (vardefs)

    program   go to state 2
    vardefs   go to state 3
    variable  go to state 4


State 1

    8 variable: TOKEN_VAR . TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    9         | TOKEN_VAR . TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: vardefs . fundefs

    TOKEN_FUN  shift, and go to state 7

    $default  reduce using rule 5 (fundefs)

    fundefs   go to state 8
    fundef    go to state 9
    function  go to state 10


State 4

    2 vardefs: variable . vardefs

    TOKEN_VAR  shift, and go to state 1

    $default  reduce using rule 3 (vardefs)

    vardefs   go to state 11
    variable  go to state 4


State 5

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    9         | TOKEN_VAR TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 12


State 6

    0 $accept: program $end .

    $default  accept


State 7

   10 function: TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R
   11         | TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type
   12         | TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_IDENTIFIER  shift, and go to state 13


State 8

    1 program: vardefs fundefs .

    $default  reduce using rule 1 (program)


State 9

    4 fundefs: fundef . fundefs

    TOKEN_FUN  shift, and go to state 7

    $default  reduce using rule 5 (fundefs)

    fundefs   go to state 14
    fundef    go to state 9
    function  go to state 10


State 10

    7 fundef: function . $@1 blckstmt

    $default  reduce using rule 6 ($@1)

    $@1  go to state 15


State 11

    2 vardefs: variable vardefs .

    $default  reduce using rule 2 (vardefs)


State 12

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_EQUAL expr TOKEN_SEMICOLON
    9         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_INT  shift, and go to state 16
    TOKEN_STR  shift, and go to state 17
    TOKEN_BLK  shift, and go to state 18

    type  go to state 19


State 13

   10 function: TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R
   11         | TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type
   12         | TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_PAREN_L  shift, and go to state 20


State 14

    4 fundefs: fundef fundefs .

    $default  reduce using rule 4 (fundefs)


State 15

    7 fundef: function $@1 . blckstmt

    TOKEN_BRACE_L  shift, and go to state 21

    blckstmt  go to state 22


State 16

   19 type: TOKEN_INT .

    $default  reduce using rule 19 (type)


State 17

   20 type: TOKEN_STR .

    $default  reduce using rule 20 (type)


State 18

   21 type: TOKEN_BLK .

    $default  reduce using rule 21 (type)


State 19

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_EQUAL expr TOKEN_SEMICOLON
    9         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_L  shift, and go to state 23
    TOKEN_EQUAL       shift, and go to state 24


State 20

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R
   11         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R TOKEN_COLON type
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 14 (params)

    params   go to state 26
    params_  go to state 27
    param    go to state 28


State 21

   50 blckstmt: TOKEN_BRACE_L . $@7 stmts TOKEN_BRACE_R

    $default  reduce using rule 49 ($@7)

    $@7  go to state 29


State 22

    7 fundef: function $@1 blckstmt .

    $default  reduce using rule 7 (fundef)


State 23

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L . args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    $default  reduce using rule 82 (args)

    expr      go to state 37
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45
    args      go to state 46
    args_     go to state 47


State 24

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 48
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 25

   17 param: TOKEN_IDENTIFIER . TOKEN_COLON type
   18      | TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_COLON  shift, and go to state 49


State 26

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R
   11         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R TOKEN_COLON type
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_PAREN_R  shift, and go to state 50


State 27

   13 params: params_ .

    $default  reduce using rule 13 (params)


State 28

   15 params_: param .
   16        | param . TOKEN_COMMA params_

    TOKEN_COMMA  shift, and go to state 51

    $default  reduce using rule 15 (params_)


State 29

   50 blckstmt: TOKEN_BRACE_L $@7 . stmts TOKEN_BRACE_R

    $default  reduce using rule 23 (stmts)

    stmts  go to state 52


State 30

   74 smolexpr: TOKEN_NIL .

    $default  reduce using rule 74 (smolexpr)


State 31

   76 smolexpr: TOKEN_PAREN_L . expr TOKEN_PAREN_R

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 53
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 32

   71 unexpr: TOKEN_MINUS . smolexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    smolexpr  go to state 54
    callexpr  go to state 45


State 33

   55 notexpr: TOKEN_LOGICAL_NOT . relexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    relexpr   go to state 55
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 34

   73 smolexpr: TOKEN_INT_VAL .

    $default  reduce using rule 73 (smolexpr)


State 35

   75 smolexpr: TOKEN_STR_VAL .

    $default  reduce using rule 75 (smolexpr)


State 36

   77 smolexpr: TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   79         | TOKEN_IDENTIFIER .
   80 callexpr: TOKEN_IDENTIFIER . TOKEN_PAREN_L args TOKEN_PAREN_R

    TOKEN_SQ_BRACK_L  shift, and go to state 56
    TOKEN_PAREN_L     shift, and go to state 57

    $default  reduce using rule 79 (smolexpr)


State 37

   51 expr: expr . TOKEN_LOGICAL_OR andexpr
   84 args_: expr .

    TOKEN_LOGICAL_OR  shift, and go to state 58

    $default  reduce using rule 84 (args_)


State 38

   52 expr: andexpr .
   53 andexpr: andexpr . TOKEN_LOGICAL_AND notexpr

    TOKEN_LOGICAL_AND  shift, and go to state 59

    $default  reduce using rule 52 (expr)


State 39

   54 andexpr: notexpr .

    $default  reduce using rule 54 (andexpr)


State 40

   56 notexpr: relexpr .
   57 relexpr: relexpr . TOKEN_LESS_EQ sumexpr
   58        | relexpr . TOKEN_GREATER_EQ sumexpr
   59        | relexpr . TOKEN_LESS sumexpr
   60        | relexpr . TOKEN_GREATER sumexpr
   61        | relexpr . TOKEN_DOUBLE_EQ sumexpr
   62        | relexpr . TOKEN_NOT_EQ sumexpr

    TOKEN_DOUBLE_EQ   shift, and go to state 60
    TOKEN_NOT_EQ      shift, and go to state 61
    TOKEN_GREATER_EQ  shift, and go to state 62
    TOKEN_LESS_EQ     shift, and go to state 63
    TOKEN_LESS        shift, and go to state 64
    TOKEN_GREATER     shift, and go to state 65

    $default  reduce using rule 56 (notexpr)


State 41

   63 relexpr: sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 63 (relexpr)


State 42

   66 sumexpr: mulexpr .
   67 mulexpr: mulexpr . TOKEN_STAR unexpr
   68        | mulexpr . TOKEN_SLASH unexpr
   69        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 66 (sumexpr)


State 43

   70 mulexpr: unexpr .

    $default  reduce using rule 70 (mulexpr)


State 44

   72 unexpr: smolexpr .

    $default  reduce using rule 72 (unexpr)


State 45

   78 smolexpr: callexpr .

    $default  reduce using rule 78 (smolexpr)


State 46

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args . TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_R  shift, and go to state 71


State 47

   81 args: args_ .
   83 args_: args_ . TOKEN_COMMA expr

    TOKEN_COMMA  shift, and go to state 72

    $default  reduce using rule 81 (args)


State 48

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 73


State 49

   17 param: TOKEN_IDENTIFIER TOKEN_COLON . type
   18      | TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_INT  shift, and go to state 16
    TOKEN_STR  shift, and go to state 17
    TOKEN_BLK  shift, and go to state 18

    type  go to state 74


State 50

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R .
   11         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R . TOKEN_COLON type
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R . TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_COLON  shift, and go to state 75

    $default  reduce using rule 10 (function)


State 51

   16 params_: param TOKEN_COMMA . params_

    TOKEN_IDENTIFIER  shift, and go to state 25

    params_  go to state 76
    param    go to state 28


State 52

   22 stmts: stmts . stmt
   50 blckstmt: TOKEN_BRACE_L $@7 stmts . TOKEN_BRACE_R

    TOKEN_IF           shift, and go to state 77
    TOKEN_FOR          shift, and go to state 78
    TOKEN_WHILE        shift, and go to state 79
    TOKEN_VAR          shift, and go to state 1
    TOKEN_BRK          shift, and go to state 80
    TOKEN_CNT          shift, and go to state 81
    TOKEN_RET          shift, and go to state 82
    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_BRACE_L      shift, and go to state 21
    TOKEN_BRACE_R      shift, and go to state 83
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_SEMICOLON    shift, and go to state 84
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 85
    TOKEN_LOG          shift, and go to state 86

    variable   go to state 87
    stmt       go to state 88
    retstmt    go to state 89
    whilestmt  go to state 90
    forstmt    go to state 91
    ifstmt     go to state 92
    asgnstmt   go to state 93
    blckstmt   go to state 94
    expr       go to state 95
    andexpr    go to state 38
    notexpr    go to state 39
    relexpr    go to state 40
    sumexpr    go to state 41
    mulexpr    go to state 42
    unexpr     go to state 43
    smolexpr   go to state 44
    callexpr   go to state 45


State 53

   51 expr: expr . TOKEN_LOGICAL_OR andexpr
   76 smolexpr: TOKEN_PAREN_L expr . TOKEN_PAREN_R

    TOKEN_PAREN_R     shift, and go to state 96
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 54

   71 unexpr: TOKEN_MINUS smolexpr .

    $default  reduce using rule 71 (unexpr)


State 55

   55 notexpr: TOKEN_LOGICAL_NOT relexpr .
   57 relexpr: relexpr . TOKEN_LESS_EQ sumexpr
   58        | relexpr . TOKEN_GREATER_EQ sumexpr
   59        | relexpr . TOKEN_LESS sumexpr
   60        | relexpr . TOKEN_GREATER sumexpr
   61        | relexpr . TOKEN_DOUBLE_EQ sumexpr
   62        | relexpr . TOKEN_NOT_EQ sumexpr

    TOKEN_DOUBLE_EQ   shift, and go to state 60
    TOKEN_NOT_EQ      shift, and go to state 61
    TOKEN_GREATER_EQ  shift, and go to state 62
    TOKEN_LESS_EQ     shift, and go to state 63
    TOKEN_LESS        shift, and go to state 64
    TOKEN_GREATER     shift, and go to state 65

    $default  reduce using rule 55 (notexpr)


State 56

   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 97
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 57

   80 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L . args TOKEN_PAREN_R

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    $default  reduce using rule 82 (args)

    expr      go to state 37
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45
    args      go to state 98
    args_     go to state 47


State 58

   51 expr: expr TOKEN_LOGICAL_OR . andexpr

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    andexpr   go to state 99
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 59

   53 andexpr: andexpr TOKEN_LOGICAL_AND . notexpr

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    notexpr   go to state 100
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 60

   61 relexpr: relexpr TOKEN_DOUBLE_EQ . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 101
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 61

   62 relexpr: relexpr TOKEN_NOT_EQ . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 102
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 62

   58 relexpr: relexpr TOKEN_GREATER_EQ . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 103
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 63

   57 relexpr: relexpr TOKEN_LESS_EQ . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 104
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 64

   59 relexpr: relexpr TOKEN_LESS . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 105
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 65

   60 relexpr: relexpr TOKEN_GREATER . sumexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    sumexpr   go to state 106
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 66

   64 sumexpr: sumexpr TOKEN_PLUS . mulexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    mulexpr   go to state 107
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 67

   65 sumexpr: sumexpr TOKEN_MINUS . mulexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    mulexpr   go to state 108
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 68

   68 mulexpr: mulexpr TOKEN_SLASH . unexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    unexpr    go to state 109
    smolexpr  go to state 44
    callexpr  go to state 45


State 69

   67 mulexpr: mulexpr TOKEN_STAR . unexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    unexpr    go to state 110
    smolexpr  go to state 44
    callexpr  go to state 45


State 70

   69 mulexpr: mulexpr TOKEN_MODULO . unexpr

    TOKEN_NIL         shift, and go to state 30
    TOKEN_PAREN_L     shift, and go to state 31
    TOKEN_MINUS       shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 34
    TOKEN_STR_VAL     shift, and go to state 35
    TOKEN_IDENTIFIER  shift, and go to state 36

    unexpr    go to state 111
    smolexpr  go to state 44
    callexpr  go to state 45


State 71

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R . TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_EQUAL  shift, and go to state 112


State 72

   83 args_: args_ TOKEN_COMMA . expr

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 113
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 73

    8 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 8 (variable)


State 74

   17 param: TOKEN_IDENTIFIER TOKEN_COLON type .
   18      | TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_L  shift, and go to state 114

    $default  reduce using rule 17 (param)


State 75

   11 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON . type
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON . type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_INT  shift, and go to state 16
    TOKEN_STR  shift, and go to state 17
    TOKEN_BLK  shift, and go to state 18

    type  go to state 115


State 76

   16 params_: param TOKEN_COMMA params_ .

    $default  reduce using rule 16 (params_)


State 77

   44 ifstmt: TOKEN_IF . expr @4 blckstmt @5 TOKEN_ELSE blckstmt
   46       | TOKEN_IF . expr @6 blckstmt

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 116
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 78

   41 forstmt: TOKEN_FOR . TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt

    TOKEN_IDENTIFIER  shift, and go to state 117


State 79

   40 whilestmt: TOKEN_WHILE . @2 expr @3 blckstmt

    $default  reduce using rule 38 (@2)

    @2  go to state 118


State 80

   32 stmt: TOKEN_BRK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 119


State 81

   33 stmt: TOKEN_CNT . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 120


State 82

   36 retstmt: TOKEN_RET . TOKEN_SEMICOLON
   37        | TOKEN_RET . expr TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_SEMICOLON    shift, and go to state 121
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 122
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 83

   50 blckstmt: TOKEN_BRACE_L $@7 stmts TOKEN_BRACE_R .

    $default  reduce using rule 50 (blckstmt)


State 84

   34 stmt: TOKEN_SEMICOLON .

    $default  reduce using rule 34 (stmt)


State 85

   47 asgnstmt: TOKEN_IDENTIFIER . TOKEN_EQUAL expr TOKEN_SEMICOLON
   48         | TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   77 smolexpr: TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   79         | TOKEN_IDENTIFIER .
   80 callexpr: TOKEN_IDENTIFIER . TOKEN_PAREN_L args TOKEN_PAREN_R

    TOKEN_SQ_BRACK_L  shift, and go to state 123
    TOKEN_PAREN_L     shift, and go to state 57
    TOKEN_EQUAL       shift, and go to state 124

    $default  reduce using rule 79 (smolexpr)


State 86

   35 stmt: TOKEN_LOG . expr TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 125
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 87

   24 stmt: variable .

    $default  reduce using rule 24 (stmt)


State 88

   22 stmts: stmts stmt .

    $default  reduce using rule 22 (stmts)


State 89

   29 stmt: retstmt .

    $default  reduce using rule 29 (stmt)


State 90

   28 stmt: whilestmt .

    $default  reduce using rule 28 (stmt)


State 91

   26 stmt: forstmt .

    $default  reduce using rule 26 (stmt)


State 92

   27 stmt: ifstmt .

    $default  reduce using rule 27 (stmt)


State 93

   30 stmt: asgnstmt .

    $default  reduce using rule 30 (stmt)


State 94

   31 stmt: blckstmt .

    $default  reduce using rule 31 (stmt)


State 95

   25 stmt: expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 126


State 96

   76 smolexpr: TOKEN_PAREN_L expr TOKEN_PAREN_R .

    $default  reduce using rule 76 (smolexpr)


State 97

   51 expr: expr . TOKEN_LOGICAL_OR andexpr
   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 127
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 98

   80 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args . TOKEN_PAREN_R

    TOKEN_PAREN_R  shift, and go to state 128


State 99

   51 expr: expr TOKEN_LOGICAL_OR andexpr .
   53 andexpr: andexpr . TOKEN_LOGICAL_AND notexpr

    TOKEN_LOGICAL_AND  shift, and go to state 59

    $default  reduce using rule 51 (expr)


State 100

   53 andexpr: andexpr TOKEN_LOGICAL_AND notexpr .

    $default  reduce using rule 53 (andexpr)


State 101

   61 relexpr: relexpr TOKEN_DOUBLE_EQ sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 61 (relexpr)


State 102

   62 relexpr: relexpr TOKEN_NOT_EQ sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 62 (relexpr)


State 103

   58 relexpr: relexpr TOKEN_GREATER_EQ sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 58 (relexpr)


State 104

   57 relexpr: relexpr TOKEN_LESS_EQ sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 57 (relexpr)


State 105

   59 relexpr: relexpr TOKEN_LESS sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 59 (relexpr)


State 106

   60 relexpr: relexpr TOKEN_GREATER sumexpr .
   64 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   65        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 60 (relexpr)


State 107

   64 sumexpr: sumexpr TOKEN_PLUS mulexpr .
   67 mulexpr: mulexpr . TOKEN_STAR unexpr
   68        | mulexpr . TOKEN_SLASH unexpr
   69        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 64 (sumexpr)


State 108

   65 sumexpr: sumexpr TOKEN_MINUS mulexpr .
   67 mulexpr: mulexpr . TOKEN_STAR unexpr
   68        | mulexpr . TOKEN_SLASH unexpr
   69        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 65 (sumexpr)


State 109

   68 mulexpr: mulexpr TOKEN_SLASH unexpr .

    $default  reduce using rule 68 (mulexpr)


State 110

   67 mulexpr: mulexpr TOKEN_STAR unexpr .

    $default  reduce using rule 67 (mulexpr)


State 111

   69 mulexpr: mulexpr TOKEN_MODULO unexpr .

    $default  reduce using rule 69 (mulexpr)


State 112

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL . TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_L  shift, and go to state 129


State 113

   51 expr: expr . TOKEN_LOGICAL_OR andexpr
   83 args_: args_ TOKEN_COMMA expr .

    TOKEN_LOGICAL_OR  shift, and go to state 58

    $default  reduce using rule 83 (args_)


State 114

   18 param: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 130


State 115

   11 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type .
   12         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type . TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_L  shift, and go to state 131

    $default  reduce using rule 11 (function)


State 116

   44 ifstmt: TOKEN_IF expr . @4 blckstmt @5 TOKEN_ELSE blckstmt
   46       | TOKEN_IF expr . @6 blckstmt
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58

    TOKEN_BRACE_L  reduce using rule 42 (@4)
    TOKEN_BRACE_L  [reduce using rule 45 (@6)]
    $default       reduce using rule 42 (@4)

    @4  go to state 132
    @6  go to state 133


State 117

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER . TOKEN_FROM expr TOKEN_TO expr blckstmt

    TOKEN_FROM  shift, and go to state 134


State 118

   40 whilestmt: TOKEN_WHILE @2 . expr @3 blckstmt

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 135
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 119

   32 stmt: TOKEN_BRK TOKEN_SEMICOLON .

    $default  reduce using rule 32 (stmt)


State 120

   33 stmt: TOKEN_CNT TOKEN_SEMICOLON .

    $default  reduce using rule 33 (stmt)


State 121

   36 retstmt: TOKEN_RET TOKEN_SEMICOLON .

    $default  reduce using rule 36 (retstmt)


State 122

   37 retstmt: TOKEN_RET expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 136


State 123

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 137
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 124

   47 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 138
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 125

   35 stmt: TOKEN_LOG expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 139


State 126

   25 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 25 (stmt)


State 127

   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R .

    $default  reduce using rule 77 (smolexpr)


State 128

   80 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args TOKEN_PAREN_R .

    $default  reduce using rule 80 (callexpr)


State 129

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L . args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    $default  reduce using rule 82 (args)

    expr      go to state 37
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45
    args      go to state 140
    args_     go to state 47


State 130

   18 param: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R .

    $default  reduce using rule 18 (param)


State 131

   12 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 141


State 132

   44 ifstmt: TOKEN_IF expr @4 . blckstmt @5 TOKEN_ELSE blckstmt

    TOKEN_BRACE_L  shift, and go to state 21

    blckstmt  go to state 142


State 133

   46 ifstmt: TOKEN_IF expr @6 . blckstmt

    TOKEN_BRACE_L  shift, and go to state 21

    blckstmt  go to state 143


State 134

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM . expr TOKEN_TO expr blckstmt

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 144
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 135

   40 whilestmt: TOKEN_WHILE @2 expr . @3 blckstmt
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58

    $default  reduce using rule 39 (@3)

    @3  go to state 145


State 136

   37 retstmt: TOKEN_RET expr TOKEN_SEMICOLON .

    $default  reduce using rule 37 (retstmt)


State 137

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr
   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 146
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 138

   47 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 147


State 139

   35 stmt: TOKEN_LOG expr TOKEN_SEMICOLON .

    $default  reduce using rule 35 (stmt)


State 140

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args . TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_R  shift, and go to state 148


State 141

   12 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R .

    $default  reduce using rule 12 (function)


State 142

   44 ifstmt: TOKEN_IF expr @4 blckstmt . @5 TOKEN_ELSE blckstmt

    $default  reduce using rule 43 (@5)

    @5  go to state 149


State 143

   46 ifstmt: TOKEN_IF expr @6 blckstmt .

    $default  reduce using rule 46 (ifstmt)


State 144

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr . TOKEN_TO expr blckstmt
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_TO          shift, and go to state 150
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 145

   40 whilestmt: TOKEN_WHILE @2 expr @3 . blckstmt

    TOKEN_BRACE_L  shift, and go to state 21

    blckstmt  go to state 151


State 146

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R . TOKEN_EQUAL expr TOKEN_SEMICOLON
   77 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R .

    TOKEN_EQUAL  shift, and go to state 152

    $default  reduce using rule 77 (smolexpr)


State 147

   47 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 47 (asgnstmt)


State 148

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 153


State 149

   44 ifstmt: TOKEN_IF expr @4 blckstmt @5 . TOKEN_ELSE blckstmt

    TOKEN_ELSE  shift, and go to state 154


State 150

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO . expr blckstmt

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 155
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 151

   40 whilestmt: TOKEN_WHILE @2 expr @3 blckstmt .

    $default  reduce using rule 40 (whilestmt)


State 152

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_NIL          shift, and go to state 30
    TOKEN_PAREN_L      shift, and go to state 31
    TOKEN_MINUS        shift, and go to state 32
    TOKEN_LOGICAL_NOT  shift, and go to state 33
    TOKEN_INT_VAL      shift, and go to state 34
    TOKEN_STR_VAL      shift, and go to state 35
    TOKEN_IDENTIFIER   shift, and go to state 36

    expr      go to state 156
    andexpr   go to state 38
    notexpr   go to state 39
    relexpr   go to state 40
    sumexpr   go to state 41
    mulexpr   go to state 42
    unexpr    go to state 43
    smolexpr  go to state 44
    callexpr  go to state 45


State 153

    9 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON .

    $default  reduce using rule 9 (variable)


State 154

   44 ifstmt: TOKEN_IF expr @4 blckstmt @5 TOKEN_ELSE . blckstmt

    TOKEN_BRACE_L  shift, and go to state 21

    blckstmt  go to state 157


State 155

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr . blckstmt
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_BRACE_L     shift, and go to state 21
    TOKEN_LOGICAL_OR  shift, and go to state 58

    blckstmt  go to state 158


State 156

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr . TOKEN_SEMICOLON
   51 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 159


State 157

   44 ifstmt: TOKEN_IF expr @4 blckstmt @5 TOKEN_ELSE blckstmt .

    $default  reduce using rule 44 (ifstmt)


State 158

   41 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt .

    $default  reduce using rule 41 (forstmt)


State 159

   48 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 48 (asgnstmt)
