Terminals unused in grammar

    TOKEN_NIL
    TOKEN_DIR_GRID
    TOKEN_DIR_TITLE
    TOKEN_DIR_ICON
    TOKEN_ERR


Rules useless in parser due to conflicts

   41 @3: %empty


State 119 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: definitions

    2 definitions: definition definitions
    3            | %empty

    4 definition: variable
    5           | function

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    7         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    8 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R blckstmt
    9         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

   11 params: params_
   12       | %empty

   13 params_: param
   14        | param TOKEN_COMMA params_

   15 param: TOKEN_IDENTIFIER TOKEN_COLON type
   16      | TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

   17 type: TOKEN_INT
   18     | TOKEN_STR
   19     | TOKEN_BLK

   20 stmts: stmts stmt
   21      | %empty

   22 stmt: variable
   23     | expr TOKEN_SEMICOLON
   24     | forstmt
   25     | ifstmt
   26     | whilestmt
   27     | retstmt
   28     | asgnstmt
   29     | blckstmt
   30     | TOKEN_BRK TOKEN_SEMICOLON
   31     | TOKEN_CNT TOKEN_SEMICOLON
   32     | TOKEN_SEMICOLON
   33     | TOKEN_LOG expr TOKEN_SEMICOLON

   34 retstmt: TOKEN_RET TOKEN_SEMICOLON
   35        | TOKEN_RET expr TOKEN_SEMICOLON

   36 whilestmt: TOKEN_WHILE expr blckstmt

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt

   38 @1: %empty

   39 @2: %empty

   40 ifstmt: TOKEN_IF expr @1 blckstmt @2 TOKEN_ELSE blckstmt

   41 @3: %empty

   42 ifstmt: TOKEN_IF expr @3 blckstmt

   43 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr TOKEN_SEMICOLON
   44         | TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON

   45 $@4: %empty

   46 blckstmt: TOKEN_BRACE_L $@4 stmts TOKEN_BRACE_R

   47 expr: expr TOKEN_LOGICAL_OR andexpr
   48     | andexpr

   49 andexpr: andexpr TOKEN_LOGICAL_AND notexpr
   50        | notexpr

   51 notexpr: TOKEN_LOGICAL_NOT relexpr
   52        | relexpr

   53 relexpr: relexpr TOKEN_LESS_EQ sumexpr
   54        | relexpr TOKEN_GREATER_EQ sumexpr
   55        | relexpr TOKEN_LESS sumexpr
   56        | relexpr TOKEN_GREATER sumexpr
   57        | relexpr TOKEN_DOUBLE_EQ sumexpr
   58        | relexpr TOKEN_NOT_EQ sumexpr
   59        | sumexpr

   60 sumexpr: sumexpr TOKEN_PLUS mulexpr
   61        | sumexpr TOKEN_MINUS mulexpr
   62        | mulexpr

   63 mulexpr: mulexpr TOKEN_STAR unexpr
   64        | mulexpr TOKEN_SLASH unexpr
   65        | mulexpr TOKEN_MODULO unexpr
   66        | unexpr

   67 unexpr: TOKEN_MINUS smolexpr
   68       | smolexpr

   69 smolexpr: TOKEN_INT_VAL
   70         | TOKEN_STR_VAL
   71         | TOKEN_PAREN_L expr TOKEN_PAREN_R
   72         | TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   73         | callexpr
   74         | TOKEN_IDENTIFIER

   75 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args TOKEN_PAREN_R

   76 args: args_
   77     | %empty

   78 args_: args_ TOKEN_COMMA expr
   79      | expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_INT (258) 17
    TOKEN_STR (259) 18
    TOKEN_BLK (260) 19
    TOKEN_FUN (261) 8 9 10
    TOKEN_IF (262) 40 42
    TOKEN_ELSE (263) 40
    TOKEN_FOR (264) 37
    TOKEN_FROM (265) 37
    TOKEN_TO (266) 37
    TOKEN_WHILE (267) 36
    TOKEN_VAR (268) 6 7
    TOKEN_BRK (269) 30
    TOKEN_CNT (270) 31
    TOKEN_RET (271) 34 35
    TOKEN_NIL (272)
    TOKEN_DIR_GRID (273)
    TOKEN_DIR_TITLE (274)
    TOKEN_DIR_ICON (275)
    TOKEN_SQ_BRACK_L (276) 7 10 16 44 72
    TOKEN_SQ_BRACK_R (277) 7 10 16 44 72
    TOKEN_PAREN_L (278) 8 9 10 71 75
    TOKEN_PAREN_R (279) 8 9 10 71 75
    TOKEN_BRACE_L (280) 46
    TOKEN_BRACE_R (281) 46
    TOKEN_PLUS (282) 60
    TOKEN_MINUS (283) 61 67
    TOKEN_SLASH (284) 64
    TOKEN_STAR (285) 63
    TOKEN_MODULO (286) 65
    TOKEN_DOUBLE_EQ (287) 57
    TOKEN_NOT_EQ (288) 58
    TOKEN_GREATER_EQ (289) 54
    TOKEN_LESS_EQ (290) 53
    TOKEN_EQUAL (291) 6 7 43 44
    TOKEN_LESS (292) 55
    TOKEN_GREATER (293) 56
    TOKEN_LOGICAL_AND (294) 49
    TOKEN_LOGICAL_OR (295) 47
    TOKEN_LOGICAL_NOT (296) 51
    TOKEN_SEMICOLON (297) 6 7 23 30 31 32 33 34 35 43 44
    TOKEN_COLON (298) 6 7 9 10 15 16
    TOKEN_COMMA (299) 14 78
    TOKEN_INT_VAL (300) 69
    TOKEN_STR_VAL (301) 70
    TOKEN_IDENTIFIER (302) 6 7 8 9 10 15 16 37 43 44 72 74 75
    TOKEN_LOG (303) 33
    TOKEN_ERR (304)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    definitions (52)
        on left: 2 3
        on right: 1 2
    definition (53)
        on left: 4 5
        on right: 2
    variable (54)
        on left: 6 7
        on right: 4 22
    function (55)
        on left: 8 9 10
        on right: 5
    params (56)
        on left: 11 12
        on right: 8 9 10
    params_ (57)
        on left: 13 14
        on right: 11 14
    param (58)
        on left: 15 16
        on right: 13 14
    type (59)
        on left: 17 18 19
        on right: 6 7 9 10 15 16
    stmts (60)
        on left: 20 21
        on right: 20 46
    stmt (61)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 20
    retstmt (62)
        on left: 34 35
        on right: 27
    whilestmt (63)
        on left: 36
        on right: 26
    forstmt (64)
        on left: 37
        on right: 24
    ifstmt (65)
        on left: 40 42
        on right: 25
    @1 (66)
        on left: 38
        on right: 40
    @2 (67)
        on left: 39
        on right: 40
    @3 (68)
        on left: 41
        on right: 42
    asgnstmt (69)
        on left: 43 44
        on right: 28
    blckstmt (70)
        on left: 46
        on right: 8 9 10 29 36 37 40 42
    $@4 (71)
        on left: 45
        on right: 46
    expr (72)
        on left: 47 48
        on right: 6 23 33 35 36 37 40 42 43 44 47 71 72 78 79
    andexpr (73)
        on left: 49 50
        on right: 47 48 49
    notexpr (74)
        on left: 51 52
        on right: 49 50
    relexpr (75)
        on left: 53 54 55 56 57 58 59
        on right: 51 52 53 54 55 56 57 58
    sumexpr (76)
        on left: 60 61 62
        on right: 53 54 55 56 57 58 59 60 61
    mulexpr (77)
        on left: 63 64 65 66
        on right: 60 61 62 63 64 65
    unexpr (78)
        on left: 67 68
        on right: 63 64 65 66
    smolexpr (79)
        on left: 69 70 71 72 73 74
        on right: 67 68
    callexpr (80)
        on left: 75
        on right: 73
    args (81)
        on left: 76 77
        on right: 7 75
    args_ (82)
        on left: 78 79
        on right: 76 78


State 0

    0 $accept: . program $end

    TOKEN_FUN  shift, and go to state 1
    TOKEN_VAR  shift, and go to state 2

    $default  reduce using rule 3 (definitions)

    program      go to state 3
    definitions  go to state 4
    definition   go to state 5
    variable     go to state 6
    function     go to state 7


State 1

    8 function: TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R blckstmt
    9         | TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type blckstmt
   10         | TOKEN_FUN . TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_IDENTIFIER  shift, and go to state 8


State 2

    6 variable: TOKEN_VAR . TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    7         | TOKEN_VAR . TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 9


State 3

    0 $accept: program . $end

    $end  shift, and go to state 10


State 4

    1 program: definitions .

    $default  reduce using rule 1 (program)


State 5

    2 definitions: definition . definitions

    TOKEN_FUN  shift, and go to state 1
    TOKEN_VAR  shift, and go to state 2

    $default  reduce using rule 3 (definitions)

    definitions  go to state 11
    definition   go to state 5
    variable     go to state 6
    function     go to state 7


State 6

    4 definition: variable .

    $default  reduce using rule 4 (definition)


State 7

    5 definition: function .

    $default  reduce using rule 5 (definition)


State 8

    8 function: TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R blckstmt
    9         | TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER . TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_PAREN_L  shift, and go to state 12


State 9

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON
    7         | TOKEN_VAR TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_COLON  shift, and go to state 13


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 definitions: definition definitions .

    $default  reduce using rule 2 (definitions)


State 12

    8 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R blckstmt
    9         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R TOKEN_COLON type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L . params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 12 (params)

    params   go to state 15
    params_  go to state 16
    param    go to state 17


State 13

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_EQUAL expr TOKEN_SEMICOLON
    7         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_INT  shift, and go to state 18
    TOKEN_STR  shift, and go to state 19
    TOKEN_BLK  shift, and go to state 20

    type  go to state 21


State 14

   15 param: TOKEN_IDENTIFIER . TOKEN_COLON type
   16      | TOKEN_IDENTIFIER . TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_COLON  shift, and go to state 22


State 15

    8 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R blckstmt
    9         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R TOKEN_COLON type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params . TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_PAREN_R  shift, and go to state 23


State 16

   11 params: params_ .

    $default  reduce using rule 11 (params)


State 17

   13 params_: param .
   14        | param . TOKEN_COMMA params_

    TOKEN_COMMA  shift, and go to state 24

    $default  reduce using rule 13 (params_)


State 18

   17 type: TOKEN_INT .

    $default  reduce using rule 17 (type)


State 19

   18 type: TOKEN_STR .

    $default  reduce using rule 18 (type)


State 20

   19 type: TOKEN_BLK .

    $default  reduce using rule 19 (type)


State 21

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_EQUAL expr TOKEN_SEMICOLON
    7         | TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_L  shift, and go to state 25
    TOKEN_EQUAL       shift, and go to state 26


State 22

   15 param: TOKEN_IDENTIFIER TOKEN_COLON . type
   16      | TOKEN_IDENTIFIER TOKEN_COLON . type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_INT  shift, and go to state 18
    TOKEN_STR  shift, and go to state 19
    TOKEN_BLK  shift, and go to state 20

    type  go to state 27


State 23

    8 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R . blckstmt
    9         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R . TOKEN_COLON type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R . TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_BRACE_L  shift, and go to state 28
    TOKEN_COLON    shift, and go to state 29

    blckstmt  go to state 30


State 24

   14 params_: param TOKEN_COMMA . params_

    TOKEN_IDENTIFIER  shift, and go to state 14

    params_  go to state 31
    param    go to state 17


State 25

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L . args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    $default  reduce using rule 77 (args)

    expr      go to state 38
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46
    args      go to state 47
    args_     go to state 48


State 26

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 49
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 27

   15 param: TOKEN_IDENTIFIER TOKEN_COLON type .
   16      | TOKEN_IDENTIFIER TOKEN_COLON type . TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_L  shift, and go to state 50

    $default  reduce using rule 15 (param)


State 28

   46 blckstmt: TOKEN_BRACE_L . $@4 stmts TOKEN_BRACE_R

    $default  reduce using rule 45 ($@4)

    $@4  go to state 51


State 29

    9 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON . type blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON . type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_INT  shift, and go to state 18
    TOKEN_STR  shift, and go to state 19
    TOKEN_BLK  shift, and go to state 20

    type  go to state 52


State 30

    8 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R blckstmt .

    $default  reduce using rule 8 (function)


State 31

   14 params_: param TOKEN_COMMA params_ .

    $default  reduce using rule 14 (params_)


State 32

   71 smolexpr: TOKEN_PAREN_L . expr TOKEN_PAREN_R

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 53
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 33

   67 unexpr: TOKEN_MINUS . smolexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    smolexpr  go to state 54
    callexpr  go to state 46


State 34

   51 notexpr: TOKEN_LOGICAL_NOT . relexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    relexpr   go to state 55
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 35

   69 smolexpr: TOKEN_INT_VAL .

    $default  reduce using rule 69 (smolexpr)


State 36

   70 smolexpr: TOKEN_STR_VAL .

    $default  reduce using rule 70 (smolexpr)


State 37

   72 smolexpr: TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   74         | TOKEN_IDENTIFIER .
   75 callexpr: TOKEN_IDENTIFIER . TOKEN_PAREN_L args TOKEN_PAREN_R

    TOKEN_SQ_BRACK_L  shift, and go to state 56
    TOKEN_PAREN_L     shift, and go to state 57

    $default  reduce using rule 74 (smolexpr)


State 38

   47 expr: expr . TOKEN_LOGICAL_OR andexpr
   79 args_: expr .

    TOKEN_LOGICAL_OR  shift, and go to state 58

    $default  reduce using rule 79 (args_)


State 39

   48 expr: andexpr .
   49 andexpr: andexpr . TOKEN_LOGICAL_AND notexpr

    TOKEN_LOGICAL_AND  shift, and go to state 59

    $default  reduce using rule 48 (expr)


State 40

   50 andexpr: notexpr .

    $default  reduce using rule 50 (andexpr)


State 41

   52 notexpr: relexpr .
   53 relexpr: relexpr . TOKEN_LESS_EQ sumexpr
   54        | relexpr . TOKEN_GREATER_EQ sumexpr
   55        | relexpr . TOKEN_LESS sumexpr
   56        | relexpr . TOKEN_GREATER sumexpr
   57        | relexpr . TOKEN_DOUBLE_EQ sumexpr
   58        | relexpr . TOKEN_NOT_EQ sumexpr

    TOKEN_DOUBLE_EQ   shift, and go to state 60
    TOKEN_NOT_EQ      shift, and go to state 61
    TOKEN_GREATER_EQ  shift, and go to state 62
    TOKEN_LESS_EQ     shift, and go to state 63
    TOKEN_LESS        shift, and go to state 64
    TOKEN_GREATER     shift, and go to state 65

    $default  reduce using rule 52 (notexpr)


State 42

   59 relexpr: sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 59 (relexpr)


State 43

   62 sumexpr: mulexpr .
   63 mulexpr: mulexpr . TOKEN_STAR unexpr
   64        | mulexpr . TOKEN_SLASH unexpr
   65        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 62 (sumexpr)


State 44

   66 mulexpr: unexpr .

    $default  reduce using rule 66 (mulexpr)


State 45

   68 unexpr: smolexpr .

    $default  reduce using rule 68 (unexpr)


State 46

   73 smolexpr: callexpr .

    $default  reduce using rule 73 (smolexpr)


State 47

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args . TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_R  shift, and go to state 71


State 48

   76 args: args_ .
   78 args_: args_ . TOKEN_COMMA expr

    TOKEN_COMMA  shift, and go to state 72

    $default  reduce using rule 76 (args)


State 49

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 73


State 50

   16 param: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 74


State 51

   46 blckstmt: TOKEN_BRACE_L $@4 . stmts TOKEN_BRACE_R

    $default  reduce using rule 21 (stmts)

    stmts  go to state 75


State 52

    9 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type . blckstmt
   10         | TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type . TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt

    TOKEN_SQ_BRACK_L  shift, and go to state 76
    TOKEN_BRACE_L     shift, and go to state 28

    blckstmt  go to state 77


State 53

   47 expr: expr . TOKEN_LOGICAL_OR andexpr
   71 smolexpr: TOKEN_PAREN_L expr . TOKEN_PAREN_R

    TOKEN_PAREN_R     shift, and go to state 78
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 54

   67 unexpr: TOKEN_MINUS smolexpr .

    $default  reduce using rule 67 (unexpr)


State 55

   51 notexpr: TOKEN_LOGICAL_NOT relexpr .
   53 relexpr: relexpr . TOKEN_LESS_EQ sumexpr
   54        | relexpr . TOKEN_GREATER_EQ sumexpr
   55        | relexpr . TOKEN_LESS sumexpr
   56        | relexpr . TOKEN_GREATER sumexpr
   57        | relexpr . TOKEN_DOUBLE_EQ sumexpr
   58        | relexpr . TOKEN_NOT_EQ sumexpr

    TOKEN_DOUBLE_EQ   shift, and go to state 60
    TOKEN_NOT_EQ      shift, and go to state 61
    TOKEN_GREATER_EQ  shift, and go to state 62
    TOKEN_LESS_EQ     shift, and go to state 63
    TOKEN_LESS        shift, and go to state 64
    TOKEN_GREATER     shift, and go to state 65

    $default  reduce using rule 51 (notexpr)


State 56

   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 79
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 57

   75 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L . args TOKEN_PAREN_R

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    $default  reduce using rule 77 (args)

    expr      go to state 38
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46
    args      go to state 80
    args_     go to state 48


State 58

   47 expr: expr TOKEN_LOGICAL_OR . andexpr

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    andexpr   go to state 81
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 59

   49 andexpr: andexpr TOKEN_LOGICAL_AND . notexpr

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    notexpr   go to state 82
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 60

   57 relexpr: relexpr TOKEN_DOUBLE_EQ . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 83
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 61

   58 relexpr: relexpr TOKEN_NOT_EQ . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 84
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 62

   54 relexpr: relexpr TOKEN_GREATER_EQ . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 85
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 63

   53 relexpr: relexpr TOKEN_LESS_EQ . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 86
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 64

   55 relexpr: relexpr TOKEN_LESS . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 87
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 65

   56 relexpr: relexpr TOKEN_GREATER . sumexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    sumexpr   go to state 88
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 66

   60 sumexpr: sumexpr TOKEN_PLUS . mulexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    mulexpr   go to state 89
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 67

   61 sumexpr: sumexpr TOKEN_MINUS . mulexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    mulexpr   go to state 90
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 68

   64 mulexpr: mulexpr TOKEN_SLASH . unexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    unexpr    go to state 91
    smolexpr  go to state 45
    callexpr  go to state 46


State 69

   63 mulexpr: mulexpr TOKEN_STAR . unexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    unexpr    go to state 92
    smolexpr  go to state 45
    callexpr  go to state 46


State 70

   65 mulexpr: mulexpr TOKEN_MODULO . unexpr

    TOKEN_PAREN_L     shift, and go to state 32
    TOKEN_MINUS       shift, and go to state 33
    TOKEN_INT_VAL     shift, and go to state 35
    TOKEN_STR_VAL     shift, and go to state 36
    TOKEN_IDENTIFIER  shift, and go to state 37

    unexpr    go to state 93
    smolexpr  go to state 45
    callexpr  go to state 46


State 71

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R . TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_EQUAL  shift, and go to state 94


State 72

   78 args_: args_ TOKEN_COMMA . expr

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 95
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 73

    6 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 6 (variable)


State 74

   16 param: TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R .

    $default  reduce using rule 16 (param)


State 75

   20 stmts: stmts . stmt
   46 blckstmt: TOKEN_BRACE_L $@4 stmts . TOKEN_BRACE_R

    TOKEN_IF           shift, and go to state 96
    TOKEN_FOR          shift, and go to state 97
    TOKEN_WHILE        shift, and go to state 98
    TOKEN_VAR          shift, and go to state 2
    TOKEN_BRK          shift, and go to state 99
    TOKEN_CNT          shift, and go to state 100
    TOKEN_RET          shift, and go to state 101
    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_BRACE_L      shift, and go to state 28
    TOKEN_BRACE_R      shift, and go to state 102
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_SEMICOLON    shift, and go to state 103
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 104
    TOKEN_LOG          shift, and go to state 105

    variable   go to state 106
    stmt       go to state 107
    retstmt    go to state 108
    whilestmt  go to state 109
    forstmt    go to state 110
    ifstmt     go to state 111
    asgnstmt   go to state 112
    blckstmt   go to state 113
    expr       go to state 114
    andexpr    go to state 39
    notexpr    go to state 40
    relexpr    go to state 41
    sumexpr    go to state 42
    mulexpr    go to state 43
    unexpr     go to state 44
    smolexpr   go to state 45
    callexpr   go to state 46


State 76

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L . TOKEN_SQ_BRACK_R blckstmt

    TOKEN_SQ_BRACK_R  shift, and go to state 115


State 77

    9 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type blckstmt .

    $default  reduce using rule 9 (function)


State 78

   71 smolexpr: TOKEN_PAREN_L expr TOKEN_PAREN_R .

    $default  reduce using rule 71 (smolexpr)


State 79

   47 expr: expr . TOKEN_LOGICAL_OR andexpr
   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 116
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 80

   75 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args . TOKEN_PAREN_R

    TOKEN_PAREN_R  shift, and go to state 117


State 81

   47 expr: expr TOKEN_LOGICAL_OR andexpr .
   49 andexpr: andexpr . TOKEN_LOGICAL_AND notexpr

    TOKEN_LOGICAL_AND  shift, and go to state 59

    $default  reduce using rule 47 (expr)


State 82

   49 andexpr: andexpr TOKEN_LOGICAL_AND notexpr .

    $default  reduce using rule 49 (andexpr)


State 83

   57 relexpr: relexpr TOKEN_DOUBLE_EQ sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 57 (relexpr)


State 84

   58 relexpr: relexpr TOKEN_NOT_EQ sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 58 (relexpr)


State 85

   54 relexpr: relexpr TOKEN_GREATER_EQ sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 54 (relexpr)


State 86

   53 relexpr: relexpr TOKEN_LESS_EQ sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 53 (relexpr)


State 87

   55 relexpr: relexpr TOKEN_LESS sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 55 (relexpr)


State 88

   56 relexpr: relexpr TOKEN_GREATER sumexpr .
   60 sumexpr: sumexpr . TOKEN_PLUS mulexpr
   61        | sumexpr . TOKEN_MINUS mulexpr

    TOKEN_PLUS   shift, and go to state 66
    TOKEN_MINUS  shift, and go to state 67

    $default  reduce using rule 56 (relexpr)


State 89

   60 sumexpr: sumexpr TOKEN_PLUS mulexpr .
   63 mulexpr: mulexpr . TOKEN_STAR unexpr
   64        | mulexpr . TOKEN_SLASH unexpr
   65        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 60 (sumexpr)


State 90

   61 sumexpr: sumexpr TOKEN_MINUS mulexpr .
   63 mulexpr: mulexpr . TOKEN_STAR unexpr
   64        | mulexpr . TOKEN_SLASH unexpr
   65        | mulexpr . TOKEN_MODULO unexpr

    TOKEN_SLASH   shift, and go to state 68
    TOKEN_STAR    shift, and go to state 69
    TOKEN_MODULO  shift, and go to state 70

    $default  reduce using rule 61 (sumexpr)


State 91

   64 mulexpr: mulexpr TOKEN_SLASH unexpr .

    $default  reduce using rule 64 (mulexpr)


State 92

   63 mulexpr: mulexpr TOKEN_STAR unexpr .

    $default  reduce using rule 63 (mulexpr)


State 93

   65 mulexpr: mulexpr TOKEN_MODULO unexpr .

    $default  reduce using rule 65 (mulexpr)


State 94

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL . TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_L  shift, and go to state 118


State 95

   47 expr: expr . TOKEN_LOGICAL_OR andexpr
   78 args_: args_ TOKEN_COMMA expr .

    TOKEN_LOGICAL_OR  shift, and go to state 58

    $default  reduce using rule 78 (args_)


State 96

   40 ifstmt: TOKEN_IF . expr @1 blckstmt @2 TOKEN_ELSE blckstmt
   42       | TOKEN_IF . expr @3 blckstmt

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 119
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 97

   37 forstmt: TOKEN_FOR . TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt

    TOKEN_IDENTIFIER  shift, and go to state 120


State 98

   36 whilestmt: TOKEN_WHILE . expr blckstmt

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 121
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 99

   30 stmt: TOKEN_BRK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 122


State 100

   31 stmt: TOKEN_CNT . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 123


State 101

   34 retstmt: TOKEN_RET . TOKEN_SEMICOLON
   35        | TOKEN_RET . expr TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_SEMICOLON    shift, and go to state 124
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 125
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 102

   46 blckstmt: TOKEN_BRACE_L $@4 stmts TOKEN_BRACE_R .

    $default  reduce using rule 46 (blckstmt)


State 103

   32 stmt: TOKEN_SEMICOLON .

    $default  reduce using rule 32 (stmt)


State 104

   43 asgnstmt: TOKEN_IDENTIFIER . TOKEN_EQUAL expr TOKEN_SEMICOLON
   44         | TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   72 smolexpr: TOKEN_IDENTIFIER . TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R
   74         | TOKEN_IDENTIFIER .
   75 callexpr: TOKEN_IDENTIFIER . TOKEN_PAREN_L args TOKEN_PAREN_R

    TOKEN_SQ_BRACK_L  shift, and go to state 126
    TOKEN_PAREN_L     shift, and go to state 57
    TOKEN_EQUAL       shift, and go to state 127

    $default  reduce using rule 74 (smolexpr)


State 105

   33 stmt: TOKEN_LOG . expr TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 128
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 106

   22 stmt: variable .

    $default  reduce using rule 22 (stmt)


State 107

   20 stmts: stmts stmt .

    $default  reduce using rule 20 (stmts)


State 108

   27 stmt: retstmt .

    $default  reduce using rule 27 (stmt)


State 109

   26 stmt: whilestmt .

    $default  reduce using rule 26 (stmt)


State 110

   24 stmt: forstmt .

    $default  reduce using rule 24 (stmt)


State 111

   25 stmt: ifstmt .

    $default  reduce using rule 25 (stmt)


State 112

   28 stmt: asgnstmt .

    $default  reduce using rule 28 (stmt)


State 113

   29 stmt: blckstmt .

    $default  reduce using rule 29 (stmt)


State 114

   23 stmt: expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 129


State 115

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R . blckstmt

    TOKEN_BRACE_L  shift, and go to state 28

    blckstmt  go to state 130


State 116

   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R .

    $default  reduce using rule 72 (smolexpr)


State 117

   75 callexpr: TOKEN_IDENTIFIER TOKEN_PAREN_L args TOKEN_PAREN_R .

    $default  reduce using rule 75 (callexpr)


State 118

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L . args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    $default  reduce using rule 77 (args)

    expr      go to state 38
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46
    args      go to state 131
    args_     go to state 48


State 119

   40 ifstmt: TOKEN_IF expr . @1 blckstmt @2 TOKEN_ELSE blckstmt
   42       | TOKEN_IF expr . @3 blckstmt
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58

    TOKEN_BRACE_L  reduce using rule 38 (@1)
    TOKEN_BRACE_L  [reduce using rule 41 (@3)]
    $default       reduce using rule 38 (@1)

    @1  go to state 132
    @3  go to state 133


State 120

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER . TOKEN_FROM expr TOKEN_TO expr blckstmt

    TOKEN_FROM  shift, and go to state 134


State 121

   36 whilestmt: TOKEN_WHILE expr . blckstmt
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_BRACE_L     shift, and go to state 28
    TOKEN_LOGICAL_OR  shift, and go to state 58

    blckstmt  go to state 135


State 122

   30 stmt: TOKEN_BRK TOKEN_SEMICOLON .

    $default  reduce using rule 30 (stmt)


State 123

   31 stmt: TOKEN_CNT TOKEN_SEMICOLON .

    $default  reduce using rule 31 (stmt)


State 124

   34 retstmt: TOKEN_RET TOKEN_SEMICOLON .

    $default  reduce using rule 34 (retstmt)


State 125

   35 retstmt: TOKEN_RET expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 136


State 126

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L . expr TOKEN_SQ_BRACK_R

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 137
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 127

   43 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 138
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 128

   33 stmt: TOKEN_LOG expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 139


State 129

   23 stmt: expr TOKEN_SEMICOLON .

    $default  reduce using rule 23 (stmt)


State 130

   10 function: TOKEN_FUN TOKEN_IDENTIFIER TOKEN_PAREN_L params TOKEN_PAREN_R TOKEN_COLON type TOKEN_SQ_BRACK_L TOKEN_SQ_BRACK_R blckstmt .

    $default  reduce using rule 10 (function)


State 131

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args . TOKEN_SQ_BRACK_R TOKEN_SEMICOLON

    TOKEN_SQ_BRACK_R  shift, and go to state 140


State 132

   40 ifstmt: TOKEN_IF expr @1 . blckstmt @2 TOKEN_ELSE blckstmt

    TOKEN_BRACE_L  shift, and go to state 28

    blckstmt  go to state 141


State 133

   42 ifstmt: TOKEN_IF expr @3 . blckstmt

    TOKEN_BRACE_L  shift, and go to state 28

    blckstmt  go to state 142


State 134

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM . expr TOKEN_TO expr blckstmt

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 143
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 135

   36 whilestmt: TOKEN_WHILE expr blckstmt .

    $default  reduce using rule 36 (whilestmt)


State 136

   35 retstmt: TOKEN_RET expr TOKEN_SEMICOLON .

    $default  reduce using rule 35 (retstmt)


State 137

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr
   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr . TOKEN_SQ_BRACK_R

    TOKEN_SQ_BRACK_R  shift, and go to state 144
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 138

   43 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 145


State 139

   33 stmt: TOKEN_LOG expr TOKEN_SEMICOLON .

    $default  reduce using rule 33 (stmt)


State 140

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 146


State 141

   40 ifstmt: TOKEN_IF expr @1 blckstmt . @2 TOKEN_ELSE blckstmt

    $default  reduce using rule 39 (@2)

    @2  go to state 147


State 142

   42 ifstmt: TOKEN_IF expr @3 blckstmt .

    $default  reduce using rule 42 (ifstmt)


State 143

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr . TOKEN_TO expr blckstmt
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_TO          shift, and go to state 148
    TOKEN_LOGICAL_OR  shift, and go to state 58


State 144

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R . TOKEN_EQUAL expr TOKEN_SEMICOLON
   72 smolexpr: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R .

    TOKEN_EQUAL  shift, and go to state 149

    $default  reduce using rule 72 (smolexpr)


State 145

   43 asgnstmt: TOKEN_IDENTIFIER TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 43 (asgnstmt)


State 146

    7 variable: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_COLON type TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_EQUAL TOKEN_SQ_BRACK_L args TOKEN_SQ_BRACK_R TOKEN_SEMICOLON .

    $default  reduce using rule 7 (variable)


State 147

   40 ifstmt: TOKEN_IF expr @1 blckstmt @2 . TOKEN_ELSE blckstmt

    TOKEN_ELSE  shift, and go to state 150


State 148

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO . expr blckstmt

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 151
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 149

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL . expr TOKEN_SEMICOLON

    TOKEN_PAREN_L      shift, and go to state 32
    TOKEN_MINUS        shift, and go to state 33
    TOKEN_LOGICAL_NOT  shift, and go to state 34
    TOKEN_INT_VAL      shift, and go to state 35
    TOKEN_STR_VAL      shift, and go to state 36
    TOKEN_IDENTIFIER   shift, and go to state 37

    expr      go to state 152
    andexpr   go to state 39
    notexpr   go to state 40
    relexpr   go to state 41
    sumexpr   go to state 42
    mulexpr   go to state 43
    unexpr    go to state 44
    smolexpr  go to state 45
    callexpr  go to state 46


State 150

   40 ifstmt: TOKEN_IF expr @1 blckstmt @2 TOKEN_ELSE . blckstmt

    TOKEN_BRACE_L  shift, and go to state 28

    blckstmt  go to state 153


State 151

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr . blckstmt
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_BRACE_L     shift, and go to state 28
    TOKEN_LOGICAL_OR  shift, and go to state 58

    blckstmt  go to state 154


State 152

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr . TOKEN_SEMICOLON
   47 expr: expr . TOKEN_LOGICAL_OR andexpr

    TOKEN_LOGICAL_OR  shift, and go to state 58
    TOKEN_SEMICOLON   shift, and go to state 155


State 153

   40 ifstmt: TOKEN_IF expr @1 blckstmt @2 TOKEN_ELSE blckstmt .

    $default  reduce using rule 40 (ifstmt)


State 154

   37 forstmt: TOKEN_FOR TOKEN_IDENTIFIER TOKEN_FROM expr TOKEN_TO expr blckstmt .

    $default  reduce using rule 37 (forstmt)


State 155

   44 asgnstmt: TOKEN_IDENTIFIER TOKEN_SQ_BRACK_L expr TOKEN_SQ_BRACK_R TOKEN_EQUAL expr TOKEN_SEMICOLON .

    $default  reduce using rule 44 (asgnstmt)
